{
  "name": "open-wispr",
  "version": "1.0.2",
  "description": "A desktop dictation application using OpenAI Whisper for speech-to-text transcription",
  "main": "main.js",
  "private": true,
  "scripts": {
    "start": "electron .",
    "dev": "concurrently -k -r \"npm:dev:renderer\" \"npm:dev:main\"",
    "dev:main": "NODE_ENV=development electron . --dev",
    "dev:renderer": "cd src && vite",
    "build": "cd src && vite build && cd .. && electron-builder",
    "postinstall": "electron-builder install-app-deps",
    "build:renderer": "cd src && vite build",
    "build:mac": "npm run build:renderer && electron-builder --mac",
    "build:win": "npm run build:renderer && electron-builder --win",
    "build:linux": "npm run build:renderer && electron-builder --linux",
    "setup": "node setup.js",
    "pack": "npm run build:renderer && CSC_IDENTITY_AUTO_DISCOVERY=false electron-builder --dir",
    "dist": "npm run build:renderer && electron-builder",
    "lint": "cd src && eslint .",
    "preview": "cd src && vite preview",
    "clean": "node cleanup.js",
    "package-linux:setup": "npx ts-node build-linux/scripts/handle-platform-deps.ts create-platform-configs",
    "package-linux:all": "npx ts-node build-linux/scripts/build-all.ts",
    "package-linux:flatpak": "npx ts-node build-linux/scripts/build-flatpak.ts",
    "package-linux:appimage": "npx ts-node build-linux/scripts/build-appimage.ts",
    "package-linux:deb": "npx ts-node build-linux/scripts/build-deb.ts",
    "package-linux:rpm": "npx ts-node build-linux/scripts/build-rpm.ts",
    "package-linux:test": "npx ts-node build-linux/scripts/test-packages.ts"
  },
  "keywords": [
    "dictation",
    "speech-to-text",
    "whisper",
    "openai",
    "electron",
    "desktop-app"
  ],
  "author": "OpenWispr Team",
  "license": "MIT",
  "devDependencies": {
    "@electron/notarize": "^3.0.1",
    "@esbuild/darwin-arm64": "^0.25.5",
    "@eslint/js": "^9.25.0",
    "@tailwindcss/vite": "^4.1.10",
    "@types/react": "^19.1.2",
    "@types/react-dom": "^19.1.2",
    "@vitejs/plugin-react": "^4.4.1",
    "autoprefixer": "^10.4.21",
    "concurrently": "^8.2.2",
    "electron": "^36.5.0",
    "electron-builder": "^24.6.4",
    "eslint": "^9.25.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^16.0.0",
    "postcss": "^8.5.6",
    "tailwindcss": "^4.1.10",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3",
    "vite": "^6.3.5"
  },
  "dependencies": {
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-slot": "^1.2.3",
    "better-sqlite3": "^11.10.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "dotenv": "^16.3.1",
    "electron-updater": "^6.6.2",
    "ffmpeg-static": "^5.2.0",
    "lucide-react": "^0.518.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "shadcn-ui": "^0.9.5",
    "tailwind-merge": "^3.3.1",
    "tw-animate-css": "^1.3.4"
  }
}
